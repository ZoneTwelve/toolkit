#!/usr/bin/env node
const argv = require("minimist")(process.argv.slice(2));
const fs = require("fs");
const pattern = fs.readFileSync(__dirname+"/pattern");
function genPayload(attack, offset, chr, skip){
  let buf = (attack.match(/[a-f0-9]{2}/g) || new Array() ).map(v=>parseInt(v, 16));
  let payload = Buffer.concat([pattern.slice(skip, offset+skip), Buffer.from(buf)]);
  //let payload = Buffer.from((new Array(offset).fill(chr)).concat(buf));
  return payload //.toString("ascii");
}

let payload = (genPayload( (argv['payload'] || ""), (parseInt(argv['offset']) || 0), (argv['char'] || "A").charCodeAt(0), parseInt(argv['skip']) || 0 ));

if(argv['file']){
  let buf = payload;
  if(argv['k'])
    buf = Buffer.concat( [ fs.readFileSync(argv['file']), payload ] );
  fs.writeFileSync(argv['file'], buf);
}else{
  // process.stdout.write( payload.toString('utf-8') );
  for(let b of payload)process.stdout.write(String.fromCharCode(b));
}